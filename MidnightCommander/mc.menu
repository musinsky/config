shell_patterns=1

# 2022-07-11
# https://github.com/musinsky/config/blob/master/MidnightCommander/mc.menu

--- View Midnight Commander macro substitution ---
    %view
    echo -e "%%m   The current menu name\n=>   %m"
    echo "##########"
    echo -e "%%p   The current file name (without path, but pwd is its path)\n=>   %p"
    echo -e "%%f   The current file name (if non-local vfs, file will be copied locally \
             and %%f will be full path to it)\n=>   %f"
    echo -e "%%x   The extension of current file name\n=>   %x"
    echo -e "%%b   The current file name without extension\n=>   %b"
    echo -e "%%d   The current directory name (pwd, without trailing slash)\n=>   %d"
    echo -e "%%t   The currently tagged files (space separated list)\n=>   %t"
    echo -e "%%u   Similar to the %%t macro, but in addition the files are \
             untagged\n=>   DOES NOT SHOW IN THIS EXAMPLE"
    echo -e "%%s   The selected files (the tagged files if any, otherwise the current \
             file)\n=>   %s"
    echo "##########"
    echo -e "If the format letter is in uppercase (%%P, %%F, %%X, %%B, %%D, %%T, %%U or \
             %%S),\nit refers to the other (unselected, opposite) panel. For example,"
    echo "##########"
    echo -e "%%S   The selected files in the unselected panel\n=>   %S"

--- Compress ---
    %view
    echo "Choose any compression method from menu"

+ ! t t
1   compress (level -9) the current directory (.tar.gz)
    BND=$(basename %d)
    echo -n "Name of the compressed file (without .tar.gz extension) [$BND]: "
    read TAR
    [ "$TAR"x = x ] && TAR="$BND" # if $TAR is empty
    cd .. && \
    tar cf - "$BND" | gzip --verbose --force -9 > "$TAR.tar.gz" && \
    echo "../$TAR.tar.gz created"

+ ! t t
2   compress (level -9) the current directory (.tar.xz)
    BND=$(basename %d)
    echo -n "Name of the compressed file (without .tar.xz extension) [$BND]: "
    read TAR
    [ "$TAR"x = x ] && TAR="$BND" # if $TAR is empty
    cd .. && \
    tar cf - "$BND" | xz --verbose --force -9 > "$TAR.tar.xz" && \
    echo "../$TAR.tar.xz created"

# https://www.gnu.org/software/tar/manual/html_node/gzip.html
# GNU tar 1.28 (2014-07-28) with new option "--one-top-level"
=+ f *.tar.gz | f *.tgz | f *.tar.Z | f *.tar.bz2 | f *.tar.xz | f *.tar.zst & t r & ! t t
x   extract the current compressed tar file to subdirectory
    tar xvf %f --one-top-level

+ ! t t & t r
g   gzip or gunzip the current file
    case %f in
        *.gz|*.[zZ]) gzip --verbose --decompress %f;;
        *)           gzip --verbose %f;;
    esac

z   zip selected file(s) or dir(s)
    ZND="pack_$(date +%%F_%%H%%M%%S)" # pack unique name
    echo -n "Name of the zip file (without .zip extension) [$ZND]: "
    read ZN
    [ "$ZN"x = x ] && ZN="$ZND" # if $ZN is empty
    zip -r --quiet "$ZN.zip" %s && \
    echo "$ZN.zip created" && \
    echo %u > /dev/null # files are untagged

7   7z  selected file(s) or dir(s)
    ZND="pack_$(date +%%F_%%H%%M%%S)" # pack unique name
    echo -n "Name of the 7z file (without .7z extension) [$ZND]: "
    read ZN
    [ "$ZN"x = x ] && ZN="$ZND" # if $ZN is empty
    7za a -bd -bso0 "$ZN.7z" %s && \
    echo "$ZN.7z created" && \
    echo %u > /dev/null # files are untagged

--- ExifTool ---
    %view
    command -v exiftool > /dev/null || { \
    echo "first must install exiftool"; \
    echo "$ dnf install perl-Image-ExifTool   # on Fedora (or EPEL)"; \
    exit 1; }
    echo "https://exiftool.org/exiftool_pod.html"

-   view all timestamp tags of selected file(s)
    %view
    exiftool -duplicates -short -G1 -time:all %s

-   view Create/Modify tags of selected file(s)
    %view
    exiftool -short -G1 -FileModifyDate -CreateDate -ModifyDate %s


--- Miscellaneous ---
=
f   determine selected file(s) type
    %view
    file %s

+ ! t t & t r
e   detect encoding of the current file (uchardet and enca)
    %view
    echo -n "file      => "; file --mime %f
    command -v uchardet > /dev/null && { \
    echo -n "uchardet  => "; head -999 %f | uchardet; }
    command -v enca > /dev/null && { \
    echo -n "enca (sk) => "; enca --language=sk %f; \
    echo -n "enca (ru) => "; enca --language=ru %f; }

--- Utility ---
# util-linux 2.35+ (2020-01-21) lsblk support all necessary columns to print
-   list block devices (lsblk)
    %view
    lsblk -p -o NAME,SIZE,FSUSE%%,TYPE,FSTYPE,FSVER,LABEL,UUID,MOUNTPOINT,\
    PTTYPE,PARTTYPE,PARTTYPENAME,PARTLABEL,PARTFLAGS --sort=NAME --tree

-   clear cached RAM (only as root)
    sync && echo 3 > /proc/sys/vm/drop_caches && echo "cache dropped"

